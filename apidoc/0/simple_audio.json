{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"uri":"package:dartemis/dartemis.dart","name":"package:dartemis/dartemis.dart","id":"dartemis","children":[{"isAbstract":true,"superclass":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nA typical entity system. Use this when you need to process entities possessing the\nprovided component types.\n","uri":"package:dartemis/src/systems/entity_processing_system.dart","name":"EntityProcessingSystem","id":"EntityProcessingSystem","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcess a [entity] this system is interested in.\n","name":"processEntity","id":"processEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"checkProcessing","id":"checkProcessing0()","line":"21","kind":"method"},{"comment":"\r\nCreate a new [EntityProcessingSystem]. It requires at least one component.\n","name":"EntityProcessingSystem","id":"EntityProcessingSystem1()","children":[{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"12","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dartemis/EntityObserver","name":"EntityObserver"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nThe most raw entity system. It should not typically be used, but you can create your own\nentity system handling by extending this. It is recommended that you use the other provided\nentity system implementations.\n\nThere is no need to ever call any other method than process on objects of this class.\n","uri":"package:dartemis/src/entity_system.dart","name":"EntitySystem","id":"EntitySystem","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled before processing of entities begins.\n","name":"begin","id":"begin0()","line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nThis is the only method that is supposed to be called from outside the library,\n","name":"process","id":"process0()","line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled after the processing of entities ends.\n","name":"end","id":"end0()","line":"52","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAny implementing entity system must implement this method and the logic\nto process the given [entities] of the system.\n","name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nReturns true if the system should be processed, false if not.\n","name":"checkProcessing","id":"checkProcessing0()","line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nOverride to implement code that gets executed when systems are initialized.\n","name":"initialize","id":"initialize0()","line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled if the system has received an [entity] it is interested in, e.g. created or a component was added to it.\n","name":"inserted","id":"inserted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled if an [entity] was removed from this system, e.g. deleted or had one of it's components removed.\n","name":"removed","id":"removed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_check","isPrivate":true,"id":"_check1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_contains","isPrivate":true,"id":"_contains1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"100","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insertToSystem","isPrivate":true,"id":"_insertToSystem1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeFromSystem","isPrivate":true,"id":"_removeFromSystem1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changed","id":"changed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"124","kind":"method"},{"name":"passive","id":"passive","line":"31","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_systemBit","isPrivate":true,"id":"_systemBit","line":"13","kind":"variable"},{"ref":{"refId":"dartemis/World","name":"World"},"name":"world","id":"world","line":"14","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"_actives","isPrivate":true,"id":"_actives","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_all","isPrivate":true,"id":"_all","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_excluded","isPrivate":true,"id":"_excluded","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_one","isPrivate":true,"id":"_one","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_dummy","isPrivate":true,"id":"_dummy","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_passive","isPrivate":true,"id":"_passive","line":"21","kind":"variable"},{"name":"EntitySystem","id":"EntitySystem1()","children":[{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"23","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/entity_observer.dart","name":"EntityObserver","id":"EntityObserver","children":[{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"5","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changed","id":"changed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"7","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"9","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"13","kind":"method"}],"line":"3","kind":"class"},{"superclass":{"refId":"dartemis/Component_Poolable","name":"Component_Poolable"},"comment":"\r\nAll components that should be managed in a [ObjectPool] must extend this class\nand have a factory constructor that calls `new Poolable.of(...)` to create\na component. By doing so, dartemis can handle the construction of\n[ComponentPoolable]s and reuse them when they are no longer needed.\n","uri":"package:dartemis/src/component.dart","name":"ComponentPoolable","id":"ComponentPoolable","children":[{"returnType":{"refId":"void","name":"void"},"name":"_removed","isPrivate":true,"id":"_removed0()","line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nIf you need to do some cleanup when removing this component override this\nmethod.\n","name":"cleanUp","id":"cleanUp0()","line":"30","kind":"method"}],"line":"20","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nAll components extend from this class.\n\nIf you want to use a poolable component that will be added to a FreeList when\nit is being removed use [ComponentPoolable] instead.\n","uri":"package:dartemis/src/component.dart","name":"Component","id":"Component","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Does nothing in [Component], only relevant for [ComponentPoolable].","name":"_removed","isPrivate":true,"id":"_removed0()","line":"11","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nObjects of this class can be pooled in the [ObjectPool] for later reuse.\n\nShould be added as a mixin.\n","uri":"package:dartemis/src/utils/object_pool.dart","name":"Poolable","id":"Poolable","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nIf you need to do some cleanup before this object moves into the Pool of\nreusable objects.\n","name":"cleanUp","id":"cleanUp0()","line":"75","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalls the cleanup function and moves this object to the [ObjectPool].\n","name":"moveToPool","id":"moveToPool0()","line":"80","kind":"method"},{"comment":"\r\nCreates a new [Poolable] of [Type] [type].\n\nThe instance created with [createPoolable] should be created with\na zero-argument contructor because it will only be called once. All fields\nof the created object should be set in the calling factory constructor.\n","name":"Poolable.of","id":"Poolable.of2()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dartemis/CreatePoolable","name":"CreatePoolable"},"name":"createPoolable","id":"createPoolable","kind":"param"}],"line":"68","kind":"constructor"}],"line":"59","kind":"class"}],"line":"1","kind":"library"}],"uri":"dartemis_addons/lib/simple_audio.dart","id":"simple_audio","children":[{"superclass":{"refId":"dartemis/EntityProcessingSystem","name":"EntityProcessingSystem"},"name":"System_Audio","id":"System_Audio","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"100","kind":"method"},{"returnType":{"refId":"simple_audio/AudioClip","name":"AudioClip"},"comment":"a default implementation for clipProvider, that retreive clip from [AudioManager]\n  (x) = > _audioManager.findClip(x);","name":"clipProvider0","id":"clipProvider01()","children":[{"name":"x","id":"x","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processEntity","id":"processEntity1()","children":[{"name":"entity","id":"entity","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"inserted","id":"inserted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"135","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removed","id":"removed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_applyTransform","isPrivate":true,"id":"_applyTransform2()","children":[{"name":"obj","id":"obj","kind":"param"},{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"157","kind":"method"},{"ref":{"refId":"dartemis/ComponentMapper","arguments":[{"refId":"transform/Transform","name":"Transform"}],"name":"ComponentMapper"},"name":"_transformMapper","isPrivate":true,"id":"_transformMapper","line":"82","kind":"variable"},{"ref":{"refId":"dartemis/ComponentMapper","arguments":[{"refId":"simple_audio/AudioDef","name":"AudioDef"}],"name":"ComponentMapper"},"name":"_objDefMapper","isPrivate":true,"id":"_objDefMapper","line":"83","kind":"variable"},{"ref":{"refId":"dartemis/ComponentMapper","arguments":[{"refId":"simple_audio/_AudioCache","name":"_AudioCache"}],"name":"ComponentMapper"},"name":"_objCacheMapper","isPrivate":true,"id":"_objCacheMapper","line":"84","kind":"variable"},{"name":"_listener","isPrivate":true,"id":"_listener","line":"86","kind":"variable"},{"name":"_positional","isPrivate":true,"id":"_positional","line":"87","kind":"variable"},{"ref":{"refId":"simple_audio/AudioManager","name":"AudioManager"},"isFinal":true,"name":"_audioManager","isPrivate":true,"id":"_audioManager","line":"88","kind":"variable"},{"ref":{"refId":"simple_audio/ClipProvider","name":"ClipProvider"},"name":"_clipProvider","isPrivate":true,"id":"_clipProvider","line":"90","kind":"variable"},{"comment":"[clipProvider] is the function to find AudioClip from name,\ndefault implementation is [clipProvider0]","name":"System_Audio","id":"System_Audio3()","children":[{"initializedField":{"refId":"simple_audio/System_Audio/_audioManager","name":"_audioManager"},"ref":{"refId":"simple_audio/AudioManager","name":"AudioManager"},"name":"_audioManager","isPrivate":true,"id":"_audioManager","kind":"param"},{"isNamed":true,"isOptional":true,"name":"clipProvider","id":"clipProvider","kind":"param"},{"isNamed":true,"isOptional":true,"defaultValue":"false","name":"positional","id":"positional","kind":"param"}],"line":"94","kind":"constructor"}],"line":"81","kind":"class"},{"returnType":{"refId":"simple_audio/AudioClip","name":"AudioClip"},"comment":"ClipProvider find an AudioClip from name;\neg a clipProvider from assetPackManager :\n\n    (name) => _assetManager[name]\n","name":"ClipProvider","id":"ClipProvider","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"79","kind":"typedef"},{"superclass":{"refId":"dartemis/Component","name":"Component"},"name":"_AudioCache","isPrivate":true,"id":"_AudioCache","children":[{"ref":{"refId":"simple_audio/AudioSource","name":"AudioSource"},"isFinal":true,"name":"source","id":"source","line":"70","kind":"variable"},{"name":"_AudioCache","id":"_AudioCache1()","children":[{"initializedField":{"refId":"simple_audio/_AudioCache/source","name":"source"},"ref":{"refId":"simple_audio/AudioSource","name":"AudioSource"},"name":"source","id":"source","kind":"param"}],"line":"72","kind":"constructor"}],"line":"69","kind":"class"},{"superclass":{"refId":"dartemis/ComponentPoolable","name":"ComponentPoolable"},"comment":"\nComponent use to store a bag of name of [AudioClip] to play.\nWhen the [System_Audio] start to play, name is removed from the bag.\n[System_Audio] start to play ASAP.\n","name":"AudioDef","id":"AudioDef","children":[{"isStatic":true,"name":"_ctor","isPrivate":true,"id":"_ctor0()","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"cleanUp","id":"cleanUp0()","line":"51","kind":"method"},{"returnType":{"refId":"simple_audio/AudioDef","name":"AudioDef"},"comment":"this is a sugar method for [l].add([a])\nsugar because you can write\n\n   new AudioDef()\n     ..add(\"boost\")\n     ..add(\"alarm\")\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"a","id":"a","kind":"param"}],"line":"63","kind":"method"},{"isFinal":true,"name":"l","id":"l","line":"38","kind":"variable"},{"comment":"only one entity can be the audioListener at time t.","name":"isAudioListener","id":"isAudioListener","line":"41","kind":"variable"},{"name":"AudioDef._","isPrivate":true,"id":"AudioDef._0()","line":"43","kind":"constructor"},{"name":"AudioDef","id":"AudioDef0()","line":"45","kind":"constructor"}],"line":"37","kind":"class"}],"line":"25","kind":"library"}