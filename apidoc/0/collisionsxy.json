{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"dartemis_toolbox/lib/collisionsxy.dart","id":"collisionsxy","children":[{"returnType":{"refId":"vector_math/vec3","name":"vec3"},"name":"calculateCenter","id":"calculateCenter1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shape","id":"shape","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"updateCollisionInfo","id":"updateCollisionInfo5()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeB","id":"shapeB","kind":"param"},{"ref":{"refId":"collisionsxy/CollisionInfo","name":"CollisionInfo"},"name":"out","id":"out","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"center1","id":"center1","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"center2","id":"center2","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"The body containing the collision edge lies in [shapeB] and the one conatining the collision vertex in [shapeA]","name":"_detectCollision_satEdge1","isPrivate":true,"id":"_detectCollision_satEdge16()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeB","id":"shapeB","kind":"param"},{"ref":{"refId":"collisionsxy/CollisionInfo","name":"CollisionInfo"},"name":"out","id":"out","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"axis","id":"axis","kind":"param"},{"ref":{"refId":"collisionsxy/MinMax","name":"MinMax"},"name":"m1","id":"m1","kind":"param"},{"ref":{"refId":"collisionsxy/MinMax","name":"MinMax"},"name":"m2","id":"m2","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"source port from\n* [A Verlet based approach for 2D game physics](http://www.gamedev.net/page/resources/_/technical/math-and-physics/a-verlet-based-approach-for-2d-game-physics-r2714)\n* [java port](https://code.google.com/p/verlet/source/browse/VerletDemo/src/com/gmail/craigmit/verletdemo/Physics.java)","name":"detectCollision_sat","id":"detectCollision_sat4()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeB","id":"shapeB","kind":"param"},{"ref":{"refId":"collisionsxy/CollisionInfo","name":"CollisionInfo"},"name":"out","id":"out","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"axis","id":"axis","kind":"param"}],"line":"59","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"Used for optimization to test if the bounding boxes (aabb) of two bodies overlap.\nbounding boxes are vec4(minX, minY, width, height)","name":"detectCollision_aabb","id":"detectCollision_aabb2()","children":[{"ref":{"refId":"vector_math/vec4","name":"vec4"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"vector_math/vec4","name":"vec4"},"name":"shapeB","id":"shapeB","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"name":"intervalDistanceOnAxis","id":"intervalDistanceOnAxis5()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"shapeB","id":"shapeB","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"axis","id":"axis","kind":"param"},{"ref":{"refId":"collisionsxy/MinMax","name":"MinMax"},"name":"m1","id":"m1","kind":"param"},{"ref":{"refId":"collisionsxy/MinMax","name":"MinMax"},"name":"m2","id":"m2","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"Calculate the distance between the two intervals","name":"intervalDistance","id":"intervalDistance4()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"minA","id":"minA","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"maxA","id":"maxA","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"minB","id":"minB","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"maxB","id":"maxB","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"projectToAxis","id":"projectToAxis3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec3","name":"vec3"}],"name":"List"},"name":"vertices","id":"vertices","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"axis","id":"axis","kind":"param"},{"ref":{"refId":"collisionsxy/MinMax","name":"MinMax"},"name":"out","id":"out","kind":"param"}],"line":"22","kind":"method"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"MinMax","id":"MinMax","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"min","id":"min","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"max","id":"max","line":"19","kind":"variable"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"CollisionInfo","id":"CollisionInfo","children":[{"isFinal":true,"name":"normal","id":"normal","line":"7","kind":"variable"},{"name":"depth","id":"depth","line":"8","kind":"variable"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"comment":"edge of collision start point","name":"edgev0","id":"edgev0","line":"10","kind":"variable"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"comment":"edge of collision end point","name":"edgev1","id":"edgev1","line":"12","kind":"variable"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"comment":"collision vertex","name":"v","id":"v","line":"14","kind":"variable"}],"line":"6","kind":"class"}],"line":"1","kind":"library"}