{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:dartemis/dartemis.dart","name":"package:dartemis/dartemis.dart","id":"dartemis","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nThe primary instance for the framework. It contains all the managers.\n\nYou must use this to create, delete and retrieve entities.\n\nIt is also important to set the delta each game loop iteration, and initialize before game loop.\n","uri":"package:dartemis/src/world.dart","name":"World","id":"World","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nMakes sure all managers systems are initialized in the order they were\nadded.\n","name":"initialize","id":"initialize0()","line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdd a manager into this world. It can be retrieved later. World will\nnotify this manager of changes to entity.\n","name":"addManager","id":"addManager1()","children":[{"ref":{"refId":"dartemis/Manager","name":"Manager"},"name":"manager","id":"manager","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dartemis/Manager","name":"Manager"},"comment":"\r\nReturns a [Manager] of the specified [managerType].\n","name":"getManager","id":"getManager1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"managerType","id":"managerType","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nDeletes the manager from this world.\n","name":"deleteManager","id":"deleteManager1()","children":[{"ref":{"refId":"dartemis/Manager","name":"Manager"},"name":"manager","id":"manager","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dartemis/Entity","name":"Entity"},"comment":"\r\nCreate and return a new or reused [Entity] instance.\n","name":"createEntity","id":"createEntity0()","line":"81","kind":"method"},{"returnType":{"refId":"dartemis/Entity","name":"Entity"},"comment":"\r\nGet an [Entity] having the specified [entityId].\n","name":"getEntity","id":"getEntity1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"entityId","id":"entityId","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nAdds a system to this world that will be processed by World.process().\nIf [passive] is set to true the system will not be processed by the world.\n","name":"addSystem","id":"addSystem2()","children":[{"ref":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"name":"system","id":"system","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"passive","id":"passive","kind":"param"}],"line":"101","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRemoved the specified system from the world.\n","name":"deleteSystem","id":"deleteSystem1()","children":[{"ref":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"name":"system","id":"system","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nRetrieve a system for specified system type.\n","name":"getSystem","id":"getSystem1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"}],"line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nPerforms an action on each entity.\n","name":"_check","isPrivate":true,"id":"_check2()","children":[{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"entities","id":"entities","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"perform","id":"perform","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"package:dartemis/src/world.dart","name":"EntityObserver","id":"EntityObserver","line":"129","kind":"param"},{"uri":"package:dartemis/src/world.dart","name":"Entity","id":"Entity","line":"129","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcesses all changes to entities and executes all non-passive systems.\n","name":"process","id":"process0()","line":"140","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcesses all changes to entities.\n","name":"processEntityChanges","id":"processEntityChanges0()","line":"153","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRemoves all entities from the world.\n\nEvery entity and component has to be created anew. Make sure not to reuse\n[Component]s that were added to an [Entity] and referenced in you code\nbecause they will be added to a free list and might be overwritten once a\nnew [Component] of that type is created.\n","name":"deleteAllEntities","id":"deleteAllEntities0()","line":"171","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a [Entity e] to this world.\n","name":"addEntity","id":"addEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nEnsure all systems are notified of changes to this [Entity e]. If you're\nadding a [Component] to an [Entity] after it's been added to the world, then\nyou need to invoke this method.\n","name":"changedEntity","id":"changedEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"190","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nDelete the [Entity e] from the world.\n","name":"deleteEntity","id":"deleteEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\n(Re)enable the [Entity e] in the world, after it having being disabled. Won't\ndo anything unless it was already disabled.\n","name":"enable","id":"enable1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nDisable the [Entity e] from being processed. Won't delete it, it will\ncontinue to exist but won't get processed.\n","name":"disable","id":"disable1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"211","kind":"method"},{"ref":{"refId":"dartemis/EntityManager","name":"EntityManager"},"comment":"\r\nReturns a manager that takes care of all the entities in the world.\nentities of this world.\n","name":"entityManager","id":"entityManager","line":"46","kind":"property"},{"ref":{"refId":"dartemis/ComponentManager","name":"ComponentManager"},"comment":"\r\nReturns a manager that takes care of all the components in the world.\n","name":"componentManager","id":"componentManager","line":"51","kind":"property"},{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/EntitySystem","name":"EntitySystem"}],"name":"ReadOnlyBag"},"comment":"\r\nGives you all the systems in this world for possible iteration.\n","name":"systems","id":"systems","line":"95","kind":"property"},{"ref":{"refId":"dartemis/EntityManager","name":"EntityManager"},"isFinal":true,"name":"_entityManager","isPrivate":true,"id":"_entityManager","line":"11","kind":"variable"},{"ref":{"refId":"dartemis/ComponentManager","name":"ComponentManager"},"isFinal":true,"name":"_componentManager","isPrivate":true,"id":"_componentManager","line":"12","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"isFinal":true,"name":"_added","isPrivate":true,"id":"_added","line":"14","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"isFinal":true,"name":"_changed","isPrivate":true,"id":"_changed","line":"15","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"isFinal":true,"name":"_deleted","isPrivate":true,"id":"_deleted","line":"16","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"isFinal":true,"name":"_enable","isPrivate":true,"id":"_enable","line":"17","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"isFinal":true,"name":"_disable","isPrivate":true,"id":"_disable","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Type","name":"Type"},{"refId":"dartemis/EntitySystem","name":"EntitySystem"}],"name":"Map"},"isFinal":true,"name":"_systems","isPrivate":true,"id":"_systems","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dartemis/EntitySystem","name":"EntitySystem"}],"name":"List"},"isFinal":true,"name":"_systemsList","isPrivate":true,"id":"_systemsList","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Type","name":"Type"},{"refId":"dartemis/Manager","name":"Manager"}],"name":"Map"},"isFinal":true,"name":"_managers","isPrivate":true,"id":"_managers","line":"23","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Manager","name":"Manager"}],"name":"Bag"},"isFinal":true,"name":"_managersBag","isPrivate":true,"id":"_managersBag","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"delta","id":"delta","line":"26","kind":"variable"},{"name":"World","id":"World0()","line":"28","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"comment":"\r\nUse this class together with PlayerManager.\n\nYou may sometimes want to create teams in your game, so that\nsome players are team mates.\n\nA player can only belong to a single team.\n","uri":"package:dartemis/src/managers/team_manager.dart","name":"TeamManager","id":"TeamManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"20","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getTeam","id":"getTeam1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"player","id":"player","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setTeam","id":"setTeam2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"player","id":"player","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"team","id":"team","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ReadOnlyBag"},"name":"getPlayers","id":"getPlayers1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"team","id":"team","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeFromTeam","id":"removeFromTeam1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"player","id":"player","kind":"param"}],"line":"42","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dartemis/Bag","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Bag"}],"name":"Map"},"name":"_playersByTeam","isPrivate":true,"id":"_playersByTeam","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"_teamByPlayer","isPrivate":true,"id":"_teamByPlayer","line":"13","kind":"variable"},{"name":"TeamManager","id":"TeamManager0()","line":"15","kind":"constructor"}],"line":"11","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"comment":"\r\nIf you need to tag any entity, use this. A typical usage would be to tag\nentities such as \"PLAYER\", \"BOSS\" or something that is very unique.\nAn [Entity] can only belong to one tag (0,1) at a time.\n","uri":"package:dartemis/src/managers/tag_manager.dart","name":"TagManager","id":"TagManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"register","id":"register2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"unregister","id":"unregister1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isRegistered","id":"isRegistered1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"dartemis/Entity","name":"Entity"},"name":"getEntity","id":"getEntity1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"name":"getRegisteredTags","id":"getRegisteredTags0()","line":"26","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"35","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dartemis/Entity","name":"Entity"}],"name":"Map"},"isFinal":true,"name":"_entitiesByTag","isPrivate":true,"id":"_entitiesByTag","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dartemis/Entity","name":"Entity"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isFinal":true,"name":"_tagsByEntity","isPrivate":true,"id":"_tagsByEntity","line":"10","kind":"variable"},{"name":"TagManager","id":"TagManager0()","line":"12","kind":"constructor"}],"line":"8","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"comment":"\r\nYou may sometimes want to specify to which player an entity belongs to.\n\nAn entity can only belong to a single player at a time.\n","uri":"package:dartemis/src/managers/player_manager.dart","name":"PlayerManager","id":"PlayerManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"setPlayer","id":"setPlayer2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"player","id":"player","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"getEntitiesOfPlayer","id":"getEntitiesOfPlayer1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"player","id":"player","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeFromPlayer","id":"removeFromPlayer1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"getPlayer","id":"getPlayer1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"49","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dartemis/Entity","name":"Entity"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"_playerByEntity","isPrivate":true,"id":"_playerByEntity","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"}],"name":"Map"},"name":"_entitiesByPlayer","isPrivate":true,"id":"_entitiesByPlayer","line":"10","kind":"variable"},{"name":"PlayerManager","id":"PlayerManager0()","line":"12","kind":"constructor"}],"line":"8","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"comment":"\r\nIf you need to group your entities together, e.g. tanks going into \"units\" group or explosions into \"effects\",\nthen use this manager. You must retrieve it using world instance.\n\nAn [Entity] can only belong to several groups (0,n) at a time.\n","uri":"package:dartemis/src/managers/group_manager.dart","name":"GroupManager","id":"GroupManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nSet the group of the entity.\n","name":"add","id":"add2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"group","id":"group","kind":"param"}],"line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRemove the entity from the specified group.\n","name":"remove","id":"remove2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"group","id":"group","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeFromAllGroups","id":"removeFromAllGroups1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"52","kind":"method"},{"returnType":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"comment":"\r\nGet all entities that belong to the provided group.\n","name":"getEntities","id":"getEntities1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"group","id":"group","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ReadOnlyBag"},"comment":"\r\nReturns the groups the entity belongs to, null if none.\n","name":"getGroups","id":"getGroups1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nChecks if the entity belongs to any group.\n","name":"isInAnyGroup","id":"isInAnyGroup1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nCheck if the entity is in the supplied group.\n","name":"isInGroup","id":"isInGroup2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"group","id":"group","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"98","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"}],"name":"Map"},"isFinal":true,"name":"_entitiesByGroup","isPrivate":true,"id":"_entitiesByGroup","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dartemis/Entity","name":"Entity"},{"refId":"dartemis/Bag","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Bag"}],"name":"Map"},"isFinal":true,"name":"_groupsByEntity","isPrivate":true,"id":"_groupsByEntity","line":"11","kind":"variable"},{"name":"GroupManager","id":"GroupManager0()","line":"13","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/system_bit_manager.dart","name":"_SystemBitManager","isPrivate":true,"id":"_SystemBitManager","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_getBitFor","isPrivate":true,"id":"_getBitFor1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"esType","id":"esType","kind":"param"}],"line":"8","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_POS","isPrivate":true,"id":"_POS","line":"5","kind":"variable"},{"isStatic":true,"name":"_systemBits","isPrivate":true,"id":"_systemBits","line":"6","kind":"variable"}],"line":"3","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dartemis/EntityObserver","name":"EntityObserver"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nManager.\n","uri":"package:dartemis/src/manager.dart","name":"Manager","id":"Manager","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"9","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changed","id":"changed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"19","kind":"method"},{"ref":{"refId":"dartemis/World","name":"World"},"name":"_world","isPrivate":true,"id":"_world","line":"7","kind":"variable"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nThis system has an empty aspect so it processes no entities, but it still gets invoked.\nYou can use this system if you need to execute some game logic and not have to concern\nyourself about aspects or entities.\n","uri":"package:dartemis/src/systems/void_entity_system.dart","name":"VoidEntitySystem","id":"VoidEntitySystem","children":[{"returnType":{"refId":"void","name":"void"},"name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"12","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processSystem","id":"processSystem0()","line":"14","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"checkProcessing","id":"checkProcessing0()","line":"16","kind":"method"},{"name":"VoidEntitySystem","id":"VoidEntitySystem0()","line":"10","kind":"constructor"}],"line":"8","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartemis/IntervalEntitySystem","name":"IntervalEntitySystem"},"comment":"\r\nIf you need to process entities at a certain interval then use this.\nA typical usage would be to regenerate ammo or health at certain intervals, no need\nto do that every game loop, but perhaps every 100 ms. or every second.\n","uri":"package:dartemis/src/systems/interval_entity_processing_system.dart","name":"IntervalEntityProcessingSystem","id":"IntervalEntityProcessingSystem","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcess an [entity] this system is interested in.\n","name":"processEntity","id":"processEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"20","kind":"method"},{"comment":"\r\nCreate a new [IntervalEntityProcessingSystem]. It requires at least one component.\n","name":"IntervalEntityProcessingSystem","id":"IntervalEntityProcessingSystem2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"interval","id":"interval","kind":"param"},{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"13","kind":"constructor"}],"line":"8","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nA system that processes entities at a interval in milliseconds.\nA typical usage would be a collision system or physics system.\n","uri":"package:dartemis/src/systems/interval_entity_system.dart","name":"IntervalEntitySystem","id":"IntervalEntitySystem","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"checkProcessing","id":"checkProcessing0()","line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nResets the accumulated delta to 0.\n\nCall `super.end()` if you overwrite this function.\n","name":"end","id":"end0()","line":"32","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Returns the accumulated delta since the system was last invoked.","name":"delta","id":"delta","line":"13","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_acc","isPrivate":true,"id":"_acc","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_delta","isPrivate":true,"id":"_delta","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"_interval","isPrivate":true,"id":"_interval","line":"10","kind":"variable"},{"name":"IntervalEntitySystem","id":"IntervalEntitySystem2()","children":[{"initializedField":{"refId":"dartemis/IntervalEntitySystem/_interval","name":"_interval"},"ref":{"refId":"dart.core/num","name":"num"},"name":"_interval","isPrivate":true,"id":"_interval","kind":"param"},{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"15","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nThe purpose of this class is to allow systems to execute at varying intervals.\n\nAn example system would be an ExpirationSystem, that deletes entities after a certain\nlifetime. Instead of running a system that decrements a timeLeft value for each\nentity, you can simply use this system to execute in a future at a time of the shortest\nlived entity, and then reset the system to run at a time in a future at a time of the\nshortest lived entity, etc.\n\nAnother example system would be an AnimationSystem. You know when you have to animate\na certain entity, e.g. in 300 milliseconds. So you can set the system to run in 300 ms.\nto perform the animation.\n\nThis will save CPU cycles in some scenarios.\n\nImplementation notes:\nIn order to start the system you need to override the inserted(Entity e) method,\nlook up the delay time from that entity and offer it to the system by using the\nofferDelay(num delay) method.\nAlso, when processing the entities you must also call offerDelay(num delay)\nfor all valid entities.\n","uri":"package:dartemis/src/systems/delayed_entity_processing_system.dart","name":"DelayedEntityProcessingSystem","id":"DelayedEntityProcessingSystem","children":[{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\r\nReturn the delay until this entity should be processed.\n","name":"getRemainingDelay","id":"getRemainingDelay1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcess a entity this system is interested in. Substract the accumulatedDelta\nfrom the entities defined delay.\n","name":"processDelta","id":"processDelta2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"accumulatedDelta","id":"accumulatedDelta","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processExpired","id":"processExpired1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"inserted","id":"inserted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"checkProcessing","id":"checkProcessing0()","line":"70","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nStart processing of entities after a certain amount of delta time.\n\nCancels current delayed run and starts a new one.\n","name":"restart","id":"restart1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"delay","id":"delay","kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRestarts the system only if the delay offered is shorter than the\ntime that the system is currently scheduled to execute at.\n\nIf the system is already stopped (not running) then the offered\ndelay will be used to restart the system with no matter its value.\n\nIf the system is already counting down, and the offered delay is\nlarger than the time remaining, the system will ignore it. If the\noffered delay is shorter than the time remaining, the system will\nrestart itself to run at the offered delay.\n","name":"offerDelay","id":"offerDelay1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"delay","id":"delay","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\r\nGet the initial delay that the system was ordered to process entities after.\n","name":"getInitialTimeDelay","id":"getInitialTimeDelay0()","line":"113","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\r\nGet the time until the system is scheduled to run at.\nReturns zero (0) if the system is not running.\nUse isRunning() before checking this value.\n","name":"getRemainingTimeUntilProcessing","id":"getRemainingTimeUntilProcessing0()","line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nStops the system from running, aborts current countdown.\nCall offerDelay or restart to run it again.\n","name":"stop","id":"stop0()","line":"131","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nCheck if the system is counting down towards processing.\n","name":"running","id":"running","line":"35","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_delay","isPrivate":true,"id":"_delay","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_running","isPrivate":true,"id":"_running","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_acc","isPrivate":true,"id":"_acc","line":"28","kind":"variable"},{"name":"DelayedEntityProcessingSystem","id":"DelayedEntityProcessingSystem1()","children":[{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"30","kind":"constructor"}],"line":"25","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartemis/EntitySystem","name":"EntitySystem"},"comment":"\r\nA typical entity system. Use this when you need to process entities possessing the\nprovided component types.\n","uri":"package:dartemis/src/systems/entity_processing_system.dart","name":"EntityProcessingSystem","id":"EntityProcessingSystem","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nProcess a [entity] this system is interested in.\n","name":"processEntity","id":"processEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"checkProcessing","id":"checkProcessing0()","line":"21","kind":"method"},{"comment":"\r\nCreate a new [EntityProcessingSystem]. It requires at least one component.\n","name":"EntityProcessingSystem","id":"EntityProcessingSystem1()","children":[{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"12","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dartemis/EntityObserver","name":"EntityObserver"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nThe most raw entity system. It should not typically be used, but you can create your own\nentity system handling by extending this. It is recommended that you use the other provided\nentity system implementations.\n\nThere is no need to ever call any other method than process on objects of this class.\n","uri":"package:dartemis/src/entity_system.dart","name":"EntitySystem","id":"EntitySystem","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled before processing of entities begins.\n","name":"begin","id":"begin0()","line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nThis is the only method that is supposed to be called from outside the library,\n","name":"process","id":"process0()","line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled after the processing of entities ends.\n","name":"end","id":"end0()","line":"52","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAny implementing entity system must implement this method and the logic\nto process the given [entities] of the system.\n","name":"processEntities","id":"processEntities1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"ReadOnlyBag"},"name":"entities","id":"entities","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nReturns true if the system should be processed, false if not.\n","name":"checkProcessing","id":"checkProcessing0()","line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nOverride to implement code that gets executed when systems are initialized.\n","name":"initialize","id":"initialize0()","line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled if the system has received an [entity] it is interested in, e.g. created or a component was added to it.\n","name":"inserted","id":"inserted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalled if an [entity] was removed from this system, e.g. deleted or had one of it's components removed.\n","name":"removed","id":"removed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_check","isPrivate":true,"id":"_check1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_contains","isPrivate":true,"id":"_contains1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"100","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insertToSystem","isPrivate":true,"id":"_insertToSystem1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeFromSystem","isPrivate":true,"id":"_removeFromSystem1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changed","id":"changed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"124","kind":"method"},{"name":"passive","id":"passive","line":"31","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_systemBit","isPrivate":true,"id":"_systemBit","line":"13","kind":"variable"},{"ref":{"refId":"dartemis/World","name":"World"},"name":"world","id":"world","line":"14","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"_actives","isPrivate":true,"id":"_actives","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_all","isPrivate":true,"id":"_all","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_excluded","isPrivate":true,"id":"_excluded","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_one","isPrivate":true,"id":"_one","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_dummy","isPrivate":true,"id":"_dummy","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_passive","isPrivate":true,"id":"_passive","line":"21","kind":"variable"},{"name":"EntitySystem","id":"EntitySystem1()","children":[{"ref":{"refId":"dartemis/Aspect","name":"Aspect"},"name":"aspect","id":"aspect","kind":"param"}],"line":"23","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/entity_observer.dart","name":"EntityObserver","id":"EntityObserver","children":[{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"5","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"changed","id":"changed1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"7","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"9","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"13","kind":"method"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nUsed only internally to generate distinct ids for entities and reuse them.\n","uri":"package:dartemis/src/entity_manager.dart","name":"_IdentifierPool","isPrivate":true,"id":"_IdentifierPool","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"checkOut","id":"checkOut0()","line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkIn","id":"checkIn1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"id","id":"id","kind":"param"}],"line":"114","kind":"method"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Bag"},"name":"_ids","isPrivate":true,"id":"_ids","line":"102","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_nextAvailableId","isPrivate":true,"id":"_nextAvailableId","line":"103","kind":"variable"},{"name":"_IdentifierPool","id":"_IdentifierPool0()","line":"105","kind":"constructor"}],"line":"100","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"uri":"package:dartemis/src/entity_manager.dart","name":"EntityManager","id":"EntityManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"21","kind":"method"},{"returnType":{"refId":"dartemis/Entity","name":"Entity"},"name":"_createEntityInstance","isPrivate":true,"id":"_createEntityInstance0()","line":"23","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"added","id":"added1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"enabled","id":"enabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"disabled","id":"disabled1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nCheck if this entity is active.\nActive means the entity is being actively processed.\n","name":"isActive","id":"isActive1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"entityId","id":"entityId","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nCheck if the specified entityId is enabled.\n","name":"isEnabled","id":"isEnabled1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"entityId","id":"entityId","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"dartemis/Entity","name":"Entity"},"comment":"\r\nGet a entity with this id.\n","name":"_getEntity","isPrivate":true,"id":"_getEntity1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"entityId","id":"entityId","kind":"param"}],"line":"72","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nGet how many entities are active in this world.\n","name":"activeEntityCount","id":"activeEntityCount","line":"77","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nGet how many entities have been created in the world since start.\nNote: A created entity may not have been added to the world, thus\ncreated count is always equal or larger than added count.\n","name":"totalCreated","id":"totalCreated","line":"84","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nGet how many entities have been added to the world since start.\n","name":"totalAdded","id":"totalAdded","line":"89","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nGet how many entities have been deleted from the world since start.\n","name":"totalDeleted","id":"totalDeleted","line":"94","kind":"property"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"_entities","isPrivate":true,"id":"_entities","line":"5","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"_deletedEntities","isPrivate":true,"id":"_deletedEntities","line":"6","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Bag"},"name":"_disabled","isPrivate":true,"id":"_disabled","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_active","isPrivate":true,"id":"_active","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_added","isPrivate":true,"id":"_added","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_created","isPrivate":true,"id":"_created","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_deleted","isPrivate":true,"id":"_deleted","line":"12","kind":"variable"},{"ref":{"refId":"dartemis/_IdentifierPool","name":"_IdentifierPool"},"name":"_identifierPool","isPrivate":true,"id":"_identifierPool","line":"14","kind":"variable"},{"name":"EntityManager","id":"EntityManager0()","line":"16","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nThe entity class. Cannot be instantiated outside the framework, you must\ncreate new entities using World.\n","uri":"package:dartemis/src/entity.dart","name":"Entity","id":"Entity","children":[{"returnType":{"refId":"void","name":"void"},"name":"_addTypeBit","isPrivate":true,"id":"_addTypeBit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"bit","id":"bit","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeTypeBit","isPrivate":true,"id":"_removeTypeBit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"bit","id":"bit","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addSystemBit","isPrivate":true,"id":"_addSystemBit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"bit","id":"bit","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeSystemBit","isPrivate":true,"id":"_removeSystemBit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"bit","id":"bit","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_reset","isPrivate":true,"id":"_reset0()","line":"50","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"55","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdd a [component] to this entity.\n","name":"addComponent","id":"addComponent1()","children":[{"ref":{"refId":"dartemis/Component","name":"Component"},"name":"component","id":"component","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRemoves the [Component] of [Type] [componentType] from this entity.\n","name":"removeComponent","id":"removeComponent1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nFaster removal of components by [type] from a entity.\n","name":"removeComponentByType","id":"removeComponentByType1()","children":[{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"dartemis/Component","name":"Component"},"comment":"\r\nThis is the preferred method to use when retrieving a [Component] from an\nentity. It will provide good performance. The recommended way to retrieve\ncomponents from an entity is using the [ComponentMapper].\n\nIn order to retrieve the component fast you must provide a [ComponentType]\ninstance for the expected component.\n\nReturns the [Component].\n","name":"getComponent","id":"getComponent1()","children":[{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"}],"line":"94","kind":"method"},{"returnType":{"refId":"dartemis/Component","name":"Component"},"comment":"\r\nSlower retrieval of a [Component] from this entity. Minimize usage of this,\nbut is fine to use e.g. when creating new entities and setting data in\ncomponents.\n\nReturns [:null:] if none is found.\n","name":"getComponentByClass","id":"getComponentByClass1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"comment":"\r\nGet all components belonging to this entity.\n","name":"getComponents","id":"getComponents1()","children":[{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"isOptional":true,"name":"fillBag","id":"fillBag","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds this entity to the world.\n","name":"addToWorld","id":"addToWorld0()","line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nDeletes this entity from the world.\n\nThe entity will be removed once world.process or world.processEntityChanges\nhas been called.\n","name":"deleteFromWorld","id":"deleteFromWorld0()","line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nDisables this entity in the world.\n","name":"disable","id":"disable0()","line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nNotifies the world that this entity has changed.\n","name":"changedInWorld","id":"changedInWorld0()","line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nEnables this entity in the world.\n","name":"enable","id":"enable0()","line":"141","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nGet the unique ID of this entity. Because entity instances are reused\ninternally use this to identify between different instances.\n","name":"uniqueId","id":"uniqueId","line":"32","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nChecks if the entity has been deleted from somewhere.\nReturns [:true:] if it's active.\n","name":"active","id":"active","line":"82","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"comment":"\r\nThe internal id for this entity within the framework. No other entity will\nhave the same ID, but ID's are however reused so another entity may acquire\nthis ID if the previous entity was deleted.\n","name":"id","id":"id","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_uniqueId","isPrivate":true,"id":"_uniqueId","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_typeBits","isPrivate":true,"id":"_typeBits","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_systemBits","isPrivate":true,"id":"_systemBits","line":"17","kind":"variable"},{"ref":{"refId":"dartemis/World","name":"World"},"name":"_world","isPrivate":true,"id":"_world","line":"19","kind":"variable"},{"ref":{"refId":"dartemis/EntityManager","name":"EntityManager"},"name":"_entityManager","isPrivate":true,"id":"_entityManager","line":"20","kind":"variable"},{"ref":{"refId":"dartemis/ComponentManager","name":"ComponentManager"},"name":"_componentManager","isPrivate":true,"id":"_componentManager","line":"21","kind":"variable"},{"name":"Entity._","isPrivate":true,"id":"Entity._2()","children":[{"initializedField":{"refId":"dartemis/Entity/_world","name":"_world"},"ref":{"refId":"dartemis/World","name":"World"},"name":"_world","isPrivate":true,"id":"_world","kind":"param"},{"initializedField":{"refId":"dartemis/Entity/id","name":"id"},"ref":{"refId":"dart.core/int","name":"int"},"name":"id","id":"id","kind":"param"}],"line":"23","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nAn Aspect is used by systems as a matcher against entities, to check if a system is\ninterested in an entity. Aspects define what sort of component types an entity must\npossess, or not possess.\n\nThis creates an aspect where an entity must possess A and B and C:\n    Aspect.getAspectForAllOf([A, B, C])\n\nThis creates an aspect where an entity must possess A and B and C, but must not possess U or V.\n    Aspect.getAspectForAllOf([A, B, C]).exclude([U, V])\n\nThis creates an aspect where an entity must possess A and B and C, but must not possess U or V, but must possess one of X or Y or Z.\n    Aspect.getAspectForAllOf([A, B, C]).exclude([U, V]).oneOf([X, Y, Z])\n\nYou can create and compose aspects in many ways:\n    Aspect.getEmpty().oneOf([X, Y, Z]).allOf([A, B, C]).exclude([U, V])\nis the same as:\n    Aspect.getAspectForAllOf([A, B, C]).exclude([U, V]).oneOf([X, Y, Z])\n","uri":"package:dartemis/src/aspect.dart","name":"Aspect","id":"Aspect","children":[{"returnType":{"refId":"dartemis/Aspect","name":"Aspect"},"comment":"\r\nReturns an aspect where an entity must possess all of the specified components.\n","name":"allOf","id":"allOf1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"dartemis/Aspect","name":"Aspect"},"comment":"\r\nExcludes all of the specified components from the aspect. A system will not be\ninterested in an entity that possesses one of the specified excluded components.\n\nReturns an aspect that can be matched against entities.\n","name":"exclude","id":"exclude1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"dartemis/Aspect","name":"Aspect"},"comment":"\r\nReturns an aspect where an entity must possess one of the specified components.\n","name":"oneOf","id":"oneOf1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dartemis/Aspect","name":"Aspect"},"isStatic":true,"comment":"\r\nCreates an aspect where an entity must possess all of the specified components.\n","name":"getAspectForAllOf","id":"getAspectForAllOf1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"58","kind":"method"},{"isStatic":true,"comment":"\r\nCreates an aspect where an entity must possess one of the specified componens.\n","name":"getAspectForOneOf","id":"getAspectForOneOf1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"dartemis/Aspect","name":"Aspect"},"isStatic":true,"comment":"\r\nCreates and returns an empty aspect. This can be used if you want a system that processes no entities, but\nstill gets invoked. Typical usages is when you need to create special purpose systems for debug rendering,\nlike rendering FPS, how many entities are active in the world, etc.\n\nYou can also use the all, one and exclude methods on this aspect, so if you wanted to create a system that\nprocesses only entities possessing just one of the components A or B or C, then you can do:\nAspect.getEmpty().one(\"A\", \"B\", \"C\");\n\nReturns an empty Aspect that will reject all entities.\n","name":"getEmpty","id":"getEmpty0()","line":"84","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"_updateBitMask","isPrivate":true,"id":"_updateBitMask2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"mask","id":"mask","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Type","name":"Type"}],"name":"List"},"name":"componentTypes","id":"componentTypes","kind":"param"}],"line":"90","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"all","id":"all","line":"86","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"excluded","id":"excluded","line":"87","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"one","id":"one","line":"88","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_all","isPrivate":true,"id":"_all","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_excluded","isPrivate":true,"id":"_excluded","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_one","isPrivate":true,"id":"_one","line":"26","kind":"variable"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/component_type_manager.dart","name":"ComponentTypeManager","id":"ComponentTypeManager","children":[{"returnType":{"refId":"dartemis/ComponentType","name":"ComponentType"},"isStatic":true,"name":"getTypeFor","id":"getTypeFor1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"}],"line":"7","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"getBit","id":"getBit1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"getId","id":"getId1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"}],"line":"18","kind":"method"},{"isStatic":true,"name":"_componentTypes","isPrivate":true,"id":"_componentTypes","line":"5","kind":"variable"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/component_type.dart","name":"ComponentType","id":"ComponentType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"bit","id":"bit","line":"16","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"id","id":"id","line":"17","kind":"property"},{"isStatic":true,"name":"_nextBit","isPrivate":true,"id":"_nextBit","line":"4","kind":"variable"},{"isStatic":true,"name":"_nextId","isPrivate":true,"id":"_nextId","line":"5","kind":"variable"},{"name":"_bit","isPrivate":true,"id":"_bit","line":"7","kind":"variable"},{"name":"_id","isPrivate":true,"id":"_id","line":"8","kind":"variable"},{"name":"ComponentType","id":"ComponentType0()","line":"10","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dartemis/Manager","name":"Manager"},"uri":"package:dartemis/src/component_manager.dart","name":"ComponentManager","id":"ComponentManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize0()","line":"10","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeComponentsOfEntity","isPrivate":true,"id":"_removeComponentsOfEntity1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"12","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addComponent","isPrivate":true,"id":"_addComponent3()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dartemis/Component","name":"Component"},"name":"component","id":"component","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeComponent","isPrivate":true,"id":"_removeComponent2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"name":"getComponentsByType","id":"getComponentsByType1()","children":[{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"}],"line":"44","kind":"method"},{"returnType":{"refId":"dartemis/Component","name":"Component"},"name":"_getComponent","isPrivate":true,"id":"_getComponent2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"type","id":"type","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"name":"getComponentsFor","id":"getComponentsFor2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"name":"fillBag","id":"fillBag","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_forComponentsOfEntity","isPrivate":true,"id":"_forComponentsOfEntity2()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"uri":"package:dartemis/src/component_manager.dart","name":"components","id":"components","line":"71","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"uri":"package:dartemis/src/component_manager.dart","name":"index","id":"index","line":"71","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"deleted","id":"deleted1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clean","id":"clean0()","line":"85","kind":"method"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"}],"name":"Bag"},"name":"_componentsByType","isPrivate":true,"id":"_componentsByType","line":"4","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Entity","name":"Entity"}],"name":"Bag"},"name":"_deleted","isPrivate":true,"id":"_deleted","line":"5","kind":"variable"},{"name":"ComponentManager","id":"ComponentManager0()","line":"7","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nHigh performance component retrieval from entities. Use this wherever you need\nto retrieve components from entities often and fast.\n","uri":"package:dartemis/src/component_mapper.dart","name":"ComponentMapper","id":"ComponentMapper","children":[{"returnType":{"refId":"dartemis/ComponentMapper/A","name":"A"},"comment":"\r\nFast but unsafe retrieval of a component for this entity.\nNo bounding checks, so this could throw an ArrayIndexOutOfBoundsExeption,\nhowever in most scenarios you already know the entity possesses this component.\n","name":"get","id":"get1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"21","kind":"method"},{"returnType":{"refId":"dartemis/ComponentMapper/A","name":"A"},"comment":"\r\nFast and safe retrieval of a component for this entity.\nIf the entity does not have this component then null is returned.\n","name":"getSafe","id":"getSafe1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nChecks if the entity has this type of component.\n","name":"has","id":"has1()","children":[{"ref":{"refId":"dartemis/Entity","name":"Entity"},"name":"e","id":"e","kind":"param"}],"line":"37","kind":"method"},{"ref":{"refId":"dartemis/ComponentType","name":"ComponentType"},"name":"_type","isPrivate":true,"id":"_type","line":"8","kind":"variable"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Component","name":"Component"}],"name":"Bag"},"name":"_components","isPrivate":true,"id":"_components","line":"9","kind":"variable"},{"name":"ComponentMapper","id":"ComponentMapper2()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"componentType","id":"componentType","kind":"param"},{"ref":{"refId":"dartemis/World","name":"World"},"name":"world","id":"world","kind":"param"}],"line":"11","kind":"constructor"},{"upperBound":{"refId":"dartemis/Component","name":"Component"},"name":"A","id":"A","kind":"typeparam"}],"line":"7","kind":"class"},{"superclass":{"refId":"dartemis/Component_Poolable","name":"Component_Poolable"},"comment":"\r\nAll components that should be managed in a [ObjectPool] must extend this class\nand have a factory constructor that calls `new Poolable.of(...)` to create\na component. By doing so, dartemis can handle the construction of\n[ComponentPoolable]s and reuse them when they are no longer needed.\n","uri":"package:dartemis/src/component.dart","name":"ComponentPoolable","id":"ComponentPoolable","children":[{"returnType":{"refId":"void","name":"void"},"name":"_removed","isPrivate":true,"id":"_removed0()","line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nIf you need to do some cleanup when removing this component override this\nmethod.\n","name":"cleanUp","id":"cleanUp0()","line":"30","kind":"method"}],"line":"20","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nAll components extend from this class.\n\nIf you want to use a poolable component that will be added to a FreeList when\nit is being removed use [ComponentPoolable] instead.\n","uri":"package:dartemis/src/component.dart","name":"Component","id":"Component","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Does nothing in [Component], only relevant for [ComponentPoolable].","name":"_removed","isPrivate":true,"id":"_removed0()","line":"11","kind":"method"}],"line":"9","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nObjects of this class can be pooled in the [ObjectPool] for later reuse.\n\nShould be added as a mixin.\n","uri":"package:dartemis/src/utils/object_pool.dart","name":"Poolable","id":"Poolable","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\r\nIf you need to do some cleanup before this object moves into the Pool of\nreusable objects.\n","name":"cleanUp","id":"cleanUp0()","line":"75","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nCalls the cleanup function and moves this object to the [ObjectPool].\n","name":"moveToPool","id":"moveToPool0()","line":"80","kind":"method"},{"comment":"\r\nCreates a new [Poolable] of [Type] [type].\n\nThe instance created with [createPoolable] should be created with\na zero-argument contructor because it will only be called once. All fields\nof the created object should be set in the calling factory constructor.\n","name":"Poolable.of","id":"Poolable.of2()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dartemis/CreatePoolable","name":"CreatePoolable"},"name":"createPoolable","id":"createPoolable","kind":"param"}],"line":"68","kind":"constructor"}],"line":"59","kind":"class"},{"returnType":{"refId":"dartemis/Poolable","name":"Poolable"},"comment":"Create a [Poolable] object with a zero argument constructor.","uri":"package:dartemis/src/utils/object_pool.dart","name":"CreatePoolable","id":"CreatePoolable","line":"52","kind":"typedef"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nInspired by <http://dartgamedevs.org/blog/2012/11/02/Free-Lists-For-Predictable-Game-Performance/>\nthis class stores objects that are no longer used in the game for later reuse.\n","uri":"package:dartemis/src/utils/object_pool.dart","name":"ObjectPool","id":"ObjectPool","children":[{"returnType":{"refId":"dartemis/Poolable","name":"Poolable"},"isStatic":true,"comment":"\r\nReturns a pooled object of [Type] [type]. If there is no object in the pool\nit will create a new one using [createPoolable].\n","name":"get","id":"get2()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dartemis/CreatePoolable","name":"CreatePoolable"},"name":"createPoolable","id":"createPoolable","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Poolable","name":"Poolable"}],"name":"Bag"},"isStatic":true,"name":"_getPool","isPrivate":true,"id":"_getPool1()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\r\nAdds a [poolable] to the [ObjectPool].\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dartemis/Poolable","name":"Poolable"},"name":"poolable","id":"poolable","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\r\nAdd a specific [amount] of [Poolable]s for later reuse.\n","name":"addMany","id":"addMany3()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dartemis/CreatePoolable","name":"CreatePoolable"},"name":"createPoolable","id":"createPoolable","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"amount","id":"amount","kind":"param"}],"line":"43","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Type","name":"Type"},{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Poolable","name":"Poolable"}],"name":"Bag"}],"name":"Map"},"isStatic":true,"name":"_objectPools","isPrivate":true,"id":"_objectPools","line":"9","kind":"variable"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:dartemis/src/utils/utils.dart","name":"Utils","id":"Utils","children":[{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"cubicInterpolation","id":"cubicInterpolation5()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"v0","id":"v0","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"v1","id":"v1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"v2","id":"v2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"v3","id":"v3","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"5","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"quadraticBezierInterpolation","id":"quadraticBezierInterpolation4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"b","id":"b","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"c","id":"c","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"lengthOfQuadraticBezierCurve","id":"lengthOfQuadraticBezierCurve6()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x0","id":"x0","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y0","id":"y0","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"lerp","id":"lerp3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"b","id":"b","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"distance","id":"distance4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"doCirclesCollide","id":"doCirclesCollide6()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius1","id":"radius1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius2","id":"radius2","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"euclideanDistanceSq2D","id":"euclideanDistanceSq2D4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"manhattanDistance","id":"manhattanDistance4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"euclideanDistance","id":"euclideanDistance4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"70","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"angleInDegreesWithOwnerRotation","id":"angleInDegreesWithOwnerRotation5()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"ownerRotation","id":"ownerRotation","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"angleInDegrees","id":"angleInDegrees4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"originX","id":"originX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"originY","id":"originY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"targetX","id":"targetX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"targetY","id":"targetY","kind":"param"}],"line":"81","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"toDegrees","id":"toDegrees1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"rad","id":"rad","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"angleInRadians","id":"angleInRadians4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"originX","id":"originX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"originY","id":"originY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"targetX","id":"targetX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"targetY","id":"targetY","kind":"param"}],"line":"87","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"shouldRotateCounterClockwise","id":"shouldRotateCounterClockwise2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleFrom","id":"angleFrom","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleTo","id":"angleTo","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"getRotatedX","id":"getRotatedX5()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"currentX","id":"currentX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"currentY","id":"currentY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"pivotX","id":"pivotX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"pivotY","id":"pivotY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleDegrees","id":"angleDegrees","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"getRotatedY","id":"getRotatedY5()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"currentX","id":"currentX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"currentY","id":"currentY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"pivotX","id":"pivotX","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"pivotY","id":"pivotY","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleDegrees","id":"angleDegrees","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"getXAtEndOfRotatedLineByOrigin","id":"getXAtEndOfRotatedLineByOrigin3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"lineLength","id":"lineLength","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleDegrees","id":"angleDegrees","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"getYAtEndOfRotatedLineByOrigin","id":"getYAtEndOfRotatedLineByOrigin3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"lineLength","id":"lineLength","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angleDegrees","id":"angleDegrees","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"collides","id":"collides6()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x1","id":"x1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y1","id":"y1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius1","id":"radius1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"x2","id":"x2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y2","id":"y2","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius2","id":"radius2","kind":"param"}],"line":"118","kind":"method"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nMath.sin() is slow. Using a lookup table for sin/cos is roughly 50x faster.\nThe loss of accuracy is minimal, maximum error is roughly 0,001.\nYou can probably get away with it.\n\nThanks to [Riven](http://riven8192.blogspot.com/2009/08/fastmath-sincos-lookup-tables.html \"FastMath :: sin/cos lookup\")\n","uri":"package:dartemis/src/utils/trigometry_lookup_table.dart","name":"_TrigUtil","isPrivate":true,"id":"_TrigUtil","children":[{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"sin","id":"sin1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"rad","id":"rad","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"cos","id":"cos1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"rad","id":"rad","kind":"param"}],"line":"12","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"sinDeg","id":"sinDeg1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"deg","id":"deg","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"cosDeg","id":"cosDeg1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"deg","id":"deg","kind":"param"}],"line":"14","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_sin","isPrivate":true,"id":"_sin1()","children":[{"name":"index","id":"index","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_cos","isPrivate":true,"id":"_cos1()","children":[{"name":"index","id":"index","kind":"param"}],"line":"29","kind":"method"},{"isStatic":true,"name":"_createLookUpTable","isPrivate":true,"id":"_createLookUpTable1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/double","name":"double"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/num","name":"num"},"uri":"package:dartemis/src/utils/trigometry_lookup_table.dart","name":"x","id":"x","line":"31","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"31","kind":"method"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_RAD","isPrivate":true,"id":"_RAD","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_DEG","isPrivate":true,"id":"_DEG","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"_SIN_BITS","isPrivate":true,"id":"_SIN_BITS","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"_SIN_MASK","isPrivate":true,"id":"_SIN_MASK","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"_SIN_COUNT","isPrivate":true,"id":"_SIN_COUNT","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_radFull","isPrivate":true,"id":"_radFull","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_radToIndex","isPrivate":true,"id":"_radToIndex","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_degFull","isPrivate":true,"id":"_degFull","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"isStatic":true,"name":"_degToIndex","isPrivate":true,"id":"_degToIndex","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/double","name":"double"}],"name":"List"},"isFinal":true,"isStatic":true,"name":"_sinLookUpTable","isPrivate":true,"id":"_sinLookUpTable","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/double","name":"double"}],"name":"List"},"isFinal":true,"isStatic":true,"name":"_cosLookUpTable","isPrivate":true,"id":"_cosLookUpTable","line":"26","kind":"variable"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [ReadOnlyBag] offers a read-only view for an underlying [Bag].\n","uri":"package:dartemis/src/utils/read_only_bag.dart","name":"ReadOnlyBag","id":"ReadOnlyBag","children":[{"returnType":{"refId":"dartemis/ReadOnlyBag/E","name":"E"},"isOperator":true,"comment":"\nReturns the element at [index].\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"14","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns [:true:] if the underlying [Bag] contains the [element].\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dartemis/ReadOnlyBag/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies the function [f] to each element the underlying [Bag].\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dartemis/ReadOnlyBag/E","name":"E"},"uri":"package:dartemis/src/utils/read_only_bag.dart","name":"element","id":"element","line":"34","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"34","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the size of the underlying [Bag].\n","name":"size","id":"size","line":"19","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns [:true:] if the underlying [Bag] is empty.\n","name":"isEmpty","id":"isEmpty","line":"24","kind":"property"},{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/ReadOnlyBag/E","name":"E"}],"name":"Bag"},"name":"_bag","isPrivate":true,"id":"_bag","line":"7","kind":"variable"},{"name":"ReadOnlyBag._of","isPrivate":true,"id":"ReadOnlyBag._of1()","children":[{"initializedField":{"refId":"dartemis/ReadOnlyBag/_bag","name":"_bag"},"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/ReadOnlyBag/E","name":"E"}],"name":"Bag"},"name":"_bag","isPrivate":true,"id":"_bag","kind":"param"}],"line":"9","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"6","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nUsing these function will save you some time if you are doing A LOT of calculation.\n","uri":"package:dartemis/src/utils/fast_math.dart","name":"FastMath","id":"FastMath","children":[{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"cos","id":"cos1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"sin","id":"sin1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"tan","id":"tan1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"asin","id":"asin1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"acos","id":"acos1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"atan","id":"atan1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"signum","id":"signum1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"41","kind":"method"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"PI","id":"PI","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"SQUARED_PI","id":"SQUARED_PI","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"HALF_PI","id":"HALF_PI","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"TWO_PI","id":"TWO_PI","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"THREE_PI_HALVES","id":"THREE_PI_HALVES","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_sin_a","isPrivate":true,"id":"_sin_a","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_sin_b","isPrivate":true,"id":"_sin_b","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_sin_p","isPrivate":true,"id":"_sin_p","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_asin_a","isPrivate":true,"id":"_asin_a","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_asin_b","isPrivate":true,"id":"_asin_b","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_asin_c","isPrivate":true,"id":"_asin_c","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_asin_d","isPrivate":true,"id":"_asin_d","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"_atan_a","isPrivate":true,"id":"_atan_a","line":"23","kind":"variable"}],"line":"6","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nCollection type a bit like List but does not preserve the order of its\nentities, speedwise it is very good, especially suited for games.\n","uri":"package:dartemis/src/utils/bag.dart","name":"Bag","id":"Bag","children":[{"returnType":{"refId":"dartemis/Bag/E","name":"E"},"isOperator":true,"comment":"\r\nReturns the element at the specified [index] in the bag.\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nApplies the function [f] to each element of this collection.\n\nDo not pass functions that add or remove elements because the order of\nelements is not preserved and such a function could lead to unexpected\nresults.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dartemis/Bag/E","name":"E"},"uri":"package:dartemis/src/utils/bag.dart","name":"element","id":"element","line":"51","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dartemis/Bag/E","name":"E"},"comment":"\r\nRemoves the element at the specified [index] in this bag. Does this by\noverwriting with the last element and then removing the last element.\n","name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"dartemis/Bag/E","name":"E"},"comment":"\r\nRemove and return the last object in the bag.\n","name":"removeLast","id":"removeLast0()","line":"75","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nRemoves the first occurrence of the specified element from this bag, if\nit is present. If the Bag does not contain the element, it is unchanged.\nDoes this by overwriting with the last element and then removing the last\nelement.\nReturns [:true:] if this list contained the specified [element].\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dartemis/Bag/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nReturns [:true:] if this bag contains the [element].\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dartemis/Bag/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nRemoves from this Bag all of its elements that are contained in the\nspecified [bag].\n\nReturns [:true:] if this Bag changed as a result of the call\n","name":"removeAll","id":"removeAll1()","children":[{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Bag/E","name":"E"}],"name":"Bag"},"name":"bag","id":"bag","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds the specified [element] to the end of this bag. If needed also\nincreases the capacity of the bag.\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dartemis/Bag/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"154","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"comment":"\r\nSets [element] at specified [index] in the bag.\n","name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dartemis/Bag/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_grow","isPrivate":true,"id":"_grow0()","line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_growTo","isPrivate":true,"id":"_growTo1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"newCapacity","id":"newCapacity","kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_ensureCapacity","isPrivate":true,"id":"_ensureCapacity1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nRemoves all of the elements from this bag. The bag will be empty after\nthis call returns.\n","name":"clear","id":"clear0()","line":"196","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdd all [items] into this bag.\n","name":"addAll","id":"addAll1()","children":[{"ref":{"refId":"dartemis/Bag","arguments":[{"refId":"dartemis/Bag/E","name":"E"}],"name":"Bag"},"name":"items","id":"items","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isIndexWithinBounds","id":"isIndexWithinBounds1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"214","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nReturns the number of elements in this bag.\n","name":"size","id":"size","line":"32","kind":"property"},{"ref":{"refId":"dartemis/ReadOnlyBag","name":"ReadOnlyBag"},"comment":"\r\nReturns a read only view for this bag.\n","name":"readOnly","id":"readOnly","line":"37","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\r\nReturns [:true:] if this list contains no elements.\n","name":"isEmpty","id":"isEmpty","line":"42","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\r\nReturns the number of elements the bag can hold without growing.\n","name":"capacity","id":"capacity","line":"148","kind":"property"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"_data","isPrivate":true,"id":"_data","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_size","isPrivate":true,"id":"_size","line":"9","kind":"variable"},{"ref":{"refId":"dartemis/ReadOnlyBag","arguments":[{"refId":"dartemis/Bag/E","name":"E"}],"name":"ReadOnlyBag"},"name":"_readOnly","isPrivate":true,"id":"_readOnly","line":"10","kind":"variable"},{"name":"Bag","id":"Bag1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"16","name":"capacity","id":"capacity","kind":"param"}],"line":"12","kind":"constructor"},{"comment":"\r\nCreates a new [Bag] with the elements of [iterable].\n","name":"Bag.from","id":"Bag.from1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dartemis/Bag/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"19","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"7","kind":"class"}],"line":"1","kind":"library"}