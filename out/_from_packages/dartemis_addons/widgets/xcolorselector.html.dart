// Auto-generated from xcolorselector.html.
// DO NOT EDIT.

library x_colorselector;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;

class XColorselector extends autogenerated.WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {".cs_samplebox":"cs_samplebox"};

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-colorselector");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <style>
.cs_samplebox {
  width: 3em;
  height: 1em;
}
</style><div class="container-fluid">
          <div class="span3">
            <canvas class="cs_sv" width="104" height="104"></canvas>
            <canvas class="cs_h" width="14" height="104"></canvas>
          </div>
          <fieldset class="span3">
            <legend>RGB</legend>
            <div><label></label><div class="controls"><input type="range" min="0" max="255" step="1"></div>
            <div><label></label><input type="range" min="0" max="255" step="1"></div>
            <div><label></label><input type="range" min="0" max="255" step="1"></div>
            <div><label>html : </label><input type="text"></div>
            <div><label>irgba : </label><input type="text"></div>
          </div></fieldset>
          <fieldset class="span3">
            <legend>HSV</legend>
            <div><label></label><input type="range" min="0" max="360" step="1"></div>
            <div><label></label><input type="range" min="0" max="100" step="1"></div>
            <div><label></label><input type="range" min="0" max="100" step="1"></div>
          </fieldset>
          <fieldset class="span3">
            <legend>triad</legend>
            <div><label></label><span class="cs_samplebox" style="backgroun</div>
            <div><label>{{hsl_irgba_hex(triad[1])}}</label></div>
            <div><label>{{hsl_irgba_hex(triad[2])}}</label></div>
          </fieldset>
        </div>
      </template>
      <script type=" application="" dart"="" src="xcolorselector.dart">
    
  

</span></div></fieldset></div>''');
  autogenerated.InputElement __e10, __e11, __e14, __e17, __e20, __e3, __e6, __e9;
  autogenerated.LabelElement __e13, __e16, __e19, __e2, __e22, __e5, __e8;
  autogenerated.SpanElement __e23;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-colorselector");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e2 = __root.nodes[2].nodes[3].nodes[3].nodes[0];
    var __binding1 = __t.contentBind(() => rStr, false);
    __e2.nodes.addAll([new autogenerated.Text('R : '),
        __binding1]);
    __e3 = __root.nodes[2].nodes[3].nodes[3].nodes[1].nodes[0];
    __t.listen(__e3.onInput, ($event) { rStr = __e3.value; });
    __t.oneWayBind(() => rStr, (e) { if (__e3.value != e) __e3.value = e; }, false, false);
    __e5 = __root.nodes[2].nodes[3].nodes[3].nodes[3].nodes[0];
    var __binding4 = __t.contentBind(() => gStr, false);
    __e5.nodes.addAll([new autogenerated.Text('G : '),
        __binding4]);
    __e6 = __root.nodes[2].nodes[3].nodes[3].nodes[3].nodes[1];
    __t.listen(__e6.onInput, ($event) { gStr = __e6.value; });
    __t.oneWayBind(() => gStr, (e) { if (__e6.value != e) __e6.value = e; }, false, false);
    __e8 = __root.nodes[2].nodes[3].nodes[3].nodes[5].nodes[0];
    var __binding7 = __t.contentBind(() => bStr, false);
    __e8.nodes.addAll([new autogenerated.Text('B : '),
        __binding7]);
    __e9 = __root.nodes[2].nodes[3].nodes[3].nodes[5].nodes[1];
    __t.listen(__e9.onInput, ($event) { bStr = __e9.value; });
    __t.oneWayBind(() => bStr, (e) { if (__e9.value != e) __e9.value = e; }, false, false);
    __e10 = __root.nodes[2].nodes[3].nodes[3].nodes[7].nodes[1];
    __t.listen(__e10.onInput, ($event) { hex_html = __e10.value; });
    __t.oneWayBind(() => hex_html, (e) { if (__e10.value != e) __e10.value = e; }, false, false);
    __e11 = __root.nodes[2].nodes[3].nodes[3].nodes[9].nodes[1];
    __t.listen(__e11.onInput, ($event) { hex_irgba = __e11.value; });
    __t.oneWayBind(() => hex_irgba, (e) { if (__e11.value != e) __e11.value = e; }, false, false);
    __e13 = __root.nodes[2].nodes[5].nodes[3].nodes[0];
    var __binding12 = __t.contentBind(() => hStr, false);
    __e13.nodes.addAll([new autogenerated.Text('H : '),
        __binding12,
        new autogenerated.Text('Â°')]);
    __e14 = __root.nodes[2].nodes[5].nodes[3].nodes[1];
    __t.listen(__e14.onInput, ($event) { hStr = __e14.value; });
    __t.oneWayBind(() => hStr, (e) { if (__e14.value != e) __e14.value = e; }, false, false);
    __e16 = __root.nodes[2].nodes[5].nodes[5].nodes[0];
    var __binding15 = __t.contentBind(() => sStr, false);
    __e16.nodes.addAll([new autogenerated.Text('S : '),
        __binding15,
        new autogenerated.Text('%')]);
    __e17 = __root.nodes[2].nodes[5].nodes[5].nodes[1];
    __t.listen(__e17.onInput, ($event) { sStr = __e17.value; });
    __t.oneWayBind(() => sStr, (e) { if (__e17.value != e) __e17.value = e; }, false, false);
    __e19 = __root.nodes[2].nodes[5].nodes[7].nodes[0];
    var __binding18 = __t.contentBind(() => vStr, false);
    __e19.nodes.addAll([new autogenerated.Text('V : '),
        __binding18,
        new autogenerated.Text('%')]);
    __e20 = __root.nodes[2].nodes[5].nodes[7].nodes[1];
    __t.listen(__e20.onInput, ($event) { vStr = __e20.value; });
    __t.oneWayBind(() => vStr, (e) { if (__e20.value != e) __e20.value = e; }, false, false);
    __e22 = __root.nodes[2].nodes[7].nodes[3].nodes[0];
    var __binding21 = __t.contentBind(() => hsl_irgba_hex(triad[0]), false);
    __e22.nodes.add(__binding21);
    __e23 = __root.nodes[2].nodes[7].nodes[3].nodes[1];
    __t.bind(() => [hsl_irgba_hex(triad[1]), hsl_irgba_hex(triad[2])],  (__e) { __e23.attributes['style'] = 'backgroun</div>\n            <div><label>${__e.newValue[0]}</label></div>\n            <div><label>${__e.newValue[1]}</label></div>\n          </fieldset>\n        </div>\n      </template>\n      <script type='; }, false);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e2 = __e3 = __e5 = __e6 = __e8 = __e9 = __e10 = __e11 = __e13 = __e14 = __e16 = __e17 = __e19 = __e20 = __e22 = __e23 = null;
  }

  /** Original code from the component. */

}
//@ sourceMappingURL=xcolorselector.html.dart.map